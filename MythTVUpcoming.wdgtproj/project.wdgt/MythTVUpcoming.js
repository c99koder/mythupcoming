// This file was generated by Dashcode from Apple Computer, Inc.
// You may edit this file to customize your Dashboard widget.

var timerID = null;
var connecting = false;

function load()
{
	setupParts();
	if(widget.preferenceForKey(createInstancePreferenceKey("mythbackendip")) != undefined) document.getElementById("backendIP").value = widget.preferenceForKey(createInstancePreferenceKey("mythbackendip"));
}

function remove()
{
	// your widget has just been removed from the layer
	// remove any preferences as needed
	widget.setPreferenceForKey(null, createInstancePreferenceKey("mythbackendip"));
}

function hide()
{
	// your widget has just been hidden stop any timers to
	// prevent cpu usage
	clearTimeout(timerID);
	MythTVStatusPlugin.disconnect();
	connecting = false;
}

function show()
{
	// your widget has just been shown.  restart any timers
	// and adjust your interface as needed
	refresh();
}

function refresh() {
	var content = document.getElementById("scrollArea").object.content;
	
	if(document.getElementById("backendIP").value != "") {
		document.getElementById("statusText").innerText = "Retrieving recordings...";
		if(connecting == false) {
			MythTVStatusPlugin.connect(document.getElementById("backendIP").value,6543,30);
			connecting = true;
		}
		if(MythTVStatusPlugin.didFinishConnecting()) {
			var recordings = MythTVStatusPlugin.getScheduledRecordings();
			MythTVStatusPlugin.disconnect();
			
			if(recordings != undefined) {
				var listingTable = "<ul id='listings'>";
				var lastDate = "";
				var oddEven = "odd";
				for(var i = 0; i < recordings.length; i++) {
					if( recordings[i][6] != lastDate) {
						if(lastDate != "") listingTable += "</ul></li>";
						listingTable += "<li><h1>" +  recordings[i][6] + "</h1><ul>";
						lastDate = recordings[i][6];
						oddEven = "odd";
					}
					listingTable += "<li class='" + oddEven + "'>";
					listingTable += "<h3>" + recordings[i][7] + "<br/>";
					listingTable += recordings[i][5] + "</h3>";
					listingTable += "<h1>" + recordings[i][0];
					if(recordings[i][1] != "") listingTable += ": " + recordings[i][1];
					listingTable += "</h1>";
					listingTable += "<h2>" + recordings[i][2] + "&nbsp;</h2>";					
					listingTable += "</li>";
					if(oddEven == "odd") oddEven = "even";
					else oddEven = "odd";
				}
				listingTable += "</ul></li>";
				listingTable += "</ul>";
				document.getElementById("scrollArea").object.content.innerHTML = listingTable;
			}
			document.getElementById("statusText").innerText = "";
			timerID = self.setTimeout("refresh()", 30*60000);
			connecting = false;
		} else {
			timerID = self.setTimeout("refresh()", 100);
		}
	} else {
		document.getElementById("statusText").innerText = "MythTV backend IP not configured.";
		timerID = self.setTimeout("refresh()", 100);
	}
	document.getElementById("scrollArea").object.refresh();
}

function showBack(event)
{
	// your widget needs to show the back
	clearTimeout(timerID);

	var front = document.getElementById("front");
	var back = document.getElementById("back");

	if (window.widget)
		widget.prepareForTransition("ToBack");

	front.style.display="none";
	back.style.display="block";
	
	if (window.widget) {
		setTimeout('widget.performTransition();', 0);
	}
}

function showFront(event)
{
	// your widget needs to show the front

	var front = document.getElementById("front");
	var back = document.getElementById("back");

	if (window.widget)
		widget.prepareForTransition("ToFront");

	front.style.display="block";
	back.style.display="none";
	
	if (window.widget) {
		setTimeout('widget.performTransition();', 0);
		timerID = self.setTimeout("refresh()", 1000);
	}
	
	widget.setPreferenceForKey(document.getElementById("backendIP").value, createInstancePreferenceKey("mythbackendip"));
	connecting = false;
}

if (window.widget)
{
	widget.onremove = remove;
	widget.onhide = hide;
	widget.onshow = show;
}


function openHomepage(event) 
{
	// Insert Code Here
	widget.openURL("http://www.c99.org/");
}
